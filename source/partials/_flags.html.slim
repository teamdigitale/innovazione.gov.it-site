/ default with image on the left, pass {image_right: true} for image on right

ruby:
  flags ||= nil
  image_right ||= nil
  is_first_flag ||= nil
  large_title ||= nil

- if flags.present?
  - flags.each do |flag|
    ruby:
      image_right = !image_right
      if image_right
        image_position = "order-lg-1"
        text_position = "order-lg-2"
      else
        image_position = "order-lg-2"
        text_position = "order-lg-1"
      end

    .row
      .d-none.d-lg-block.col-lg-6.p-0 class="#{image_position}"
        - if is_first_flag
          - if large_title
            - lg_image_url = flag.image.url(w: 1400,
              h: 840,
              fit: "crop",
              auto: "compress")
            - xl_image_url = flag.image.url(w: 1400,
              h: 800,
              fit: "crop",
              auto: "compress")
          - else
            - lg_image_url = flag.image.url(w: 320,
              h: 200,
              fit: "crop",
              auto: "compress")
            - xl_image_url = flag.image.url(w: 400,
              h: 245,
              fit: "crop",
              auto: "compress")

          = proxy_image_tag flag.image.url(w: 10,
              h: 6,
              fit: "crop"),
              data: {sizes: "100vw",
                src: flag.image.url(w: 700,
                    h: 400,
                    fit: "crop",
                    auto: "compress"),
                srcset: "#{flag.image.url(w: 450,
                    h: 330,
                    fit: 'crop',
                    auto: 'compress')} 480w,
                  #{flag.image.url(w: 600,
                    h: 333,
                    fit: 'crop',
                    auto: 'compress')} 632w,
                    #{flag.image.url(w: 560,
                      h: 333,
                      fit: 'crop',
                      auto: 'compress')} 844w,
                    #{flag.image.url(w: 700,
                      h: 400,
                      fit: 'crop',
                      auto: 'compress')} 1091w,
                    #{lg_image_url} 1320w,
                    #{xl_image_url} 1400w"},
              class: "lazyload d-block w-100",
              alt: flag.image.alt

        - else
          figure.m-0
            = proxy_image_tag flag.image.url(w: 10, h: 8,
              fit: "crop"),
              data: {sizes: "100vw",
                src: flag.image.url(w: 650,
                  h: 550,
                  fit: "crop",
                  auto: "compress"),
                srcset: "#{flag.image.url(w: 650,
                  h: 550,
                  fit: 'crop',
                  auto: 'compress')} 480w"},
              class: "lazyload d-block w-100 m-0",
              style: "height: 500px; max-width: 100%; object-fit: cover",
              alt: flag.image.alt

      .col-12.col-lg-6.px-0.align-self-center class="#{text_position}"
        .col-lg-8.offset-lg-2.px-0.pt-5.pt-lg-0
          .px-2.px-lg-0.pt-4.pt-lg-0.text-center.text-lg-left
            h2.h6.mid-text--large.text-uppercase.font-weight-semibold.p-lg-0
              = flag.pre_title
            h3.d-lg-block.h2.pt-2.pb-3
              = flag.title
            .mt-3.mt-lg-4.text-center.text-lg-left.pb-5.pb-lg-0.mb-3.mb-lg-0
              - html_class = "btn text-uppercase btn-primary"
              = partial "partials/links/#{flag.link.item_type.api_key}",
                locals: {item: flag.link, html_class: html_class}

      .col-12.d-lg-none.px-0
        .img-responsive-wrapper.p-0
          .img-responsive
            .img-wrapper
              figure.m-0
                = proxy_image_tag flag.image.url(w: 10,
                  h: 6,
                  fit: "crop"),
                   data: {sizes: "100vw",
                     src: flag.image.url(w: 560,
                       h: 320,
                       fit: "crop",
                       auto: "compress"),
                     srcset: "#{flag.image.url(w: 560,
                        h: 320,
                        fit: 'crop',
                        auto: 'compress')} 480w"},
                   class: "lazyload",
                   alt: flag.image.alt,
                   title: flag.image.title
