ruby:
  titles = block.calendars.map {|c| c.title}

section.lightgrey-bg-a2
  .container.py-5
    h3.h1.text-center._mid-target.mb-4
      span._mid-target-point id=anchor_id(block.menu_title)
      = block.title

    .d-flex.justify-content-center.mb-5
      .dropdown
        button.btn.btn-dropdown.border-bottom.border-primary.dropdown-toggle [aria-expanded="false"
          id="dropdownMenuButton"
          aria-haspopup="true"
          data-toggle="dropdown"
          type="button" ]
          .d-flex.justify-content-between
            .mr-5.pb-2 id="active-calendar" style="text-transform:none;"
              = block.calendars.first.title
            svg.icon-expand.icon.icon-sm.icon-primary
              use xlink:href="/images/sprite.svg#it-expand" 
        .dropdown-menu aria-labelledby="dropdownMenuButton" 
          .link-list-wrapper
            ul.link-list.nav.nav-tabs id="myTab" role="tablist"
              - titles.each_with_index do |title, index|
                ruby:
                  selected = (index == 0)
                  status = index == 0 ? "active" : ""
                  n = index + 1

                li.nav-items
                  a.list-item.nav-link [
                    class="#{status} click-tab"
                    id="tab#{n}-tab"
                    data-toggle="tab"
                    href="#tab#{n}"
                    role="tab"
                    aria-controls="tab#{n}"
                    aria-selected=selected]

                    = title

    .tab-content id="myTabContent"
      - block.calendars.each_with_index do |calendar, index|
        ruby:
          status = index == 0 ? "show active" : ""
          n = index + 1
          milestones = calendar.phases.map {|p| p.milestones}.flatten
          phase_1 = calendar.phases.first
          phase1_idx = phase_1.milestones.size
          phase_2 = calendar.phases[1] ? calendar.phases[1] : nil
          phase2_idx = phase_2 ? phase_2.milestones.size + phase1_idx : nil
          phase_3 = calendar.phases[2] ? calendar.phases[2] : nil
          phase3_idx = phase_3 ? phase_3.milestones.size + phase2_idx : nil
          start_idx_array = [0, phase1_idx, phase2_idx, phase3_idx]

        .tab-pane.show [class=status
          id="tab#{n}"
          role="tabpanel"
          aria-labelledby="tab#{n}-tab"]

          .swiper style="overflow:hidden;"
            .swiper-container-calendar
              .swiper-wrapper
                - milestones.each_with_index do |milestone, index|
                  .swiper-slide
                    ruby:
                      phase = case
                        when index < phase1_idx
                          phase_1
                        when index < phase2_idx
                          phase_2
                        else
                          phase_3
                        end
                        show_title = start_idx_array.include?(index)
                    = partial "partials/card-calendar",
                      locals: {milestone: milestone,
                      phase: phase,
                      show_phase_title: show_title}

              .swiper-button-next
              .swiper-button-prev
              .swiper-pagination

              // Navigation arrows are not working.
              // Possible solution is to add custom arrows and
              // use slideNext and slidePrev methods.
              // See https://swiperjs.com/swiper-api#initialize-swiper
